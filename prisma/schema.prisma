generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ABIERTAS {
  ID_ABIERTA  Int       @id @default(autoincrement())
  ID_SALA     Int
  ID_PREGUNTA Int
  ID_USUARIO  Int
  CORRECTA    Boolean
  RESPUESTA   String?   @db.VarChar(255)
  PREGUNTAS   PREGUNTAS @relation(fields: [ID_PREGUNTA], references: [ID_PREGUNTA], onDelete: Cascade, map: "ABIERTAS_PREGUNTAS_ID_PREGUNTA_fk")
  SALAS       SALAS     @relation(fields: [ID_SALA], references: [ID_SALA], onDelete: Cascade, map: "ABIERTAS_SALAS_ID_SALA_fk")
  USUARIOS    USUARIOS  @relation(fields: [ID_USUARIO], references: [ID_USUARIO], onDelete: Cascade, map: "ABIERTAS_USUARIOS_ID_USUARIO_fk")

  @@index([ID_PREGUNTA], map: "ABIERTAS_PREGUNTAS_ID_PREGUNTA_fk")
  @@index([ID_SALA], map: "ABIERTAS_SALAS_ID_SALA_fk")
  @@index([ID_USUARIO], map: "ABIERTAS_USUARIOS_ID_USUARIO_fk")
}

model ASIGNACIONES {
  ID_ASIGNACION   Int            @id @default(autoincrement())
  ID_SALA         Int?
  ID_LECTURA      Int?
  ID_QUESTIONARIO Int?
  TITULO          String?        @db.VarChar(50)
  INDICACION      String?        @db.VarChar(100)
  FECHA_CREACION  DateTime?      @db.Date
  LECTURAS        LECTURAS?      @relation(fields: [ID_LECTURA], references: [ID_LECTURA], onDelete: Cascade, map: "ASIGNACIONES_LECTURAS_ID_LECTURA_fk")
  QUESTIONARIOS   QUESTIONARIOS? @relation(fields: [ID_QUESTIONARIO], references: [ID_QUESTIONARIO], onDelete: Cascade, map: "ASIGNACIONES_QUESTIONARIOS_ID_QUESTIONARIO_fk")
  SALAS           SALAS?         @relation(fields: [ID_SALA], references: [ID_SALA], onDelete: Cascade, map: "ASIGNACIONES_SALAS_ID_SALA_fk")

  @@index([ID_QUESTIONARIO], map: "ASIGNACIONES_QUESTIONARIOS_ID_QUESTIONARIO_fk")
  @@index([ID_SALA], map: "FK_REFERENCE_4")
  @@index([ID_LECTURA], map: "FK_REFERENCE_5")
}

model AUTORES {
  ID_AUTOR        Int        @id @default(autoincrement())
  NOMBRE          String?    @db.VarChar(100)
  FECHA_NAC       DateTime?  @db.Date
  FECHA_DEFUNCION DateTime?  @db.Date
  NACIONALIDAD    String?    @db.VarChar(50)
  APELLIDO        String?    @db.VarChar(100)
  LECTURAS        LECTURAS[]
}

model HISTORIAL {
  ID_HISTORIAL Int       @id @default(autoincrement())
  ID_USUARIO   Int?
  ID_LECTURA   Int?
  AVANCE       Int?
  TIEMPO_FINAL Int?
  FECHA_INICIO DateTime? @db.DateTime(0)
  FECHA_FINAL  DateTime? @db.DateTime(0)
  LECTURAS     LECTURAS? @relation(fields: [ID_LECTURA], references: [ID_LECTURA], onDelete: Cascade, map: "HISTORIAL_LECTURAS_ID_LECTURA_fk")
  USUARIOS     USUARIOS? @relation(fields: [ID_USUARIO], references: [ID_USUARIO], onDelete: Cascade, map: "HISTORIAL_USUARIOS_ID_USUARIO_fk")

  @@index([ID_USUARIO], map: "FK_REFERENCE_8")
  @@index([ID_LECTURA], map: "FK_REFERENCE_9")
}

model INSCRITOS {
  ID_INSCRITO Int      @id @default(autoincrement())
  ID_SALA     Int
  ID_USUARIO  Int
  ACEPTADO    Boolean
  SALAS       SALAS    @relation(fields: [ID_SALA], references: [ID_SALA], onDelete: Cascade, map: "INSCRITOS_SALAS_ID_SALA_fk")
  USUARIOS    USUARIOS @relation(fields: [ID_USUARIO], references: [ID_USUARIO], onDelete: Cascade, map: "INSCRITOS_USUARIOS_ID_USUARIO_fk")

  @@index([ID_SALA], map: "FK_REFERENCE_6")
  @@index([ID_USUARIO], map: "FK_REFERENCE_7")
}

model LECTURAS {
  ID_LECTURA          Int             @id @default(autoincrement())
  ID_AUTOR            Int?
  TITULO              String?         @db.VarChar(50)
  FECHA_PUBLICACION   DateTime?       @db.Date
  GENERO              String?         @db.VarChar(30)
  TEXTO               String?         @db.Text
  CORRIENTE_LITERARIA String?         @db.VarChar(30)
  PUNTUACION          Float?          @db.Float
  ASIGNACIONES        ASIGNACIONES[]
  HISTORIAL           HISTORIAL[]
  AUTORES             AUTORES?        @relation(fields: [ID_AUTOR], references: [ID_AUTOR], onDelete: Cascade, map: "LECTURAS_AUTORES_ID_AUTOR_fk")
  PROGRESOS           PROGRESOS[]
  QUESTIONARIOS       QUESTIONARIOS[]

  @@index([ID_AUTOR], map: "FK_REFERENCE_3")
}

model PREGUNTAS {
  ID_PREGUNTA     Int           @id @default(autoincrement())
  ID_QUESTIONARIO Int
  DESCRIPCION     String?       @db.VarChar(255)
  ABIERTA         Boolean
  ABIERTAS        ABIERTAS[]
  QUESTIONARIOS   QUESTIONARIOS @relation(fields: [ID_QUESTIONARIO], references: [ID_QUESTIONARIO], onDelete: Cascade, map: "PREGUNTAS_QUESTIONARIOS_ID_QUESTIONARIO_fk")
  RESPUESTAS      RESPUESTAS[]

  @@index([ID_QUESTIONARIO], map: "PREGUNTAS_QUESTIONARIOS_ID_QUESTIONARIO_fk")
}

model PROGRESOS {
  ID_PROGRESO Int       @id @default(autoincrement())
  ID_USUARIO  Int?
  ID_LECTURA  Int?
  TIEMPO      Int?
  FECHA       DateTime? @db.Date
  LECTURAS    LECTURAS? @relation(fields: [ID_LECTURA], references: [ID_LECTURA], onDelete: NoAction, onUpdate: NoAction, map: "PROGRESOS_LECTURAS_ID_LECTURA_fk")
  USUARIOS    USUARIOS? @relation(fields: [ID_USUARIO], references: [ID_USUARIO], onDelete: Cascade, map: "PROGRESOS_USUARIOS_ID_USUARIO_fk")

  @@index([ID_USUARIO], map: "FK_REFERENCE_10")
  @@index([ID_LECTURA], map: "FK_REFERENCE_11")
}

model QUESTIONARIOS {
  ID_QUESTIONARIO Int            @id @default(autoincrement())
  ID_LECTURA      Int?
  DESCRIPCION     String         @db.VarChar(255)
  NIVEL           Int?
  ASIGNACIONES    ASIGNACIONES[]
  PREGUNTAS       PREGUNTAS[]
  LECTURAS        LECTURAS?      @relation(fields: [ID_LECTURA], references: [ID_LECTURA], onDelete: Cascade, map: "QUESTIONARIOS_LECTURAS_ID_LECTURA_fk")

  @@index([ID_LECTURA], map: "FK_REFERENCE_12")
}

model RESPUESTAS {
  ID_RESPUESTA    Int       @id @default(autoincrement())
  ID_PREGUNTA     Int
  TEXTO_RESPUESTA String?   @db.VarChar(255)
  ID_USUARIO      Int
  PREGUNTAS       PREGUNTAS @relation(fields: [ID_PREGUNTA], references: [ID_PREGUNTA], onDelete: Cascade, map: "RESPUESTAS_PREGUNTAS_ID_PREGUNTA_fk")

  @@index([ID_PREGUNTA], map: "FK_REFERENCE_14")
}

model SALAS {
  ID_SALA        Int            @id @unique(map: "SALAS_pk2") @default(autoincrement())
  ID_USUARIO     Int
  DESCRIPCION    String?        @db.VarChar(100)
  FECHA_CREACION DateTime?      @db.DateTime(0)
  HASH           String         @unique(map: "SALAS_pk") @db.VarChar(50)
  ABIERTAS       ABIERTAS[]
  ASIGNACIONES   ASIGNACIONES[]
  INSCRITOS      INSCRITOS[]
  USUARIOS       USUARIOS       @relation(fields: [ID_USUARIO], references: [ID_USUARIO], onDelete: Cascade, map: "SALAS_USUARIOS_ID_USUARIO_fk")

  @@index([ID_USUARIO], map: "FK_REFERENCE_2")
}

model TUTORES {
  ID_TUTOR    Int       @id @default(autoincrement())
  ID_TUTORADO Int?
  NOMBRE      String?   @db.VarChar(100)
  APELLIDO    String?   @db.VarChar(100)
  PARENTESCO  String?   @db.VarChar(10)
  EMAIL       String    @db.VarChar(100)
  USUARIOS    USUARIOS? @relation(fields: [ID_TUTORADO], references: [ID_USUARIO], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_1")

  @@index([ID_TUTORADO], map: "FK_REFERENCE_1")
}

model USUARIOS {
  ID_USUARIO   Int         @id @default(autoincrement())
  NOMBRE       String?     @db.VarChar(100)
  APELLIDO     String?     @db.VarChar(100)
  FECHA_NAC    DateTime?   @db.Date
  TIPO_USUARIO String?     @db.VarChar(25)
  EMAIL        String?     @db.VarChar(100)
  PWD          String?     @db.VarChar(255)
  FECHA_ALTA   DateTime?   @db.DateTime(0)
  APODO        String?     @db.VarChar(15)
  FOTO         String?     @db.Text
  NIVEL        String?     @db.VarChar(10)
  ABIERTAS     ABIERTAS[]
  HISTORIAL    HISTORIAL[]
  INSCRITOS    INSCRITOS[]
  PROGRESOS    PROGRESOS[]
  SALAS        SALAS[]
  TUTORES      TUTORES[]
}
