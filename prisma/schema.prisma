generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ASIGNACIONES {
  ID_ASIGNACION  Int       @id @default(autoincrement())
  ID_SALA        Int
  ID_LECTURA     Int?
  TITULO         String    @db.VarChar(30)
  INDICACION     String?   @db.VarChar(50)
  FECHA_CREACION DateTime  @db.Date
  SALAS          SALAS     @relation(fields: [ID_SALA], references: [ID_SALA], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_4")
  LECTURAS       LECTURAS? @relation(fields: [ID_LECTURA], references: [ID_LECTURA], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_5")

  @@index([ID_SALA], map: "FK_REFERENCE_4")
  @@index([ID_LECTURA], map: "FK_REFERENCE_5")
}

model AUTORES {
  ID_AUTOR        Int        @id @default(autoincrement())
  NOMBRE          String     @db.VarChar(100)
  FECHA_NAC       DateTime?  @db.Date
  FECHA_DEFUNCION DateTime?  @db.Date
  NACIONALIDAD    String?    @db.VarChar(25)
  APELLIDOS       String     @db.VarChar(100)
  BIBLIOGRAFIA    String     @db.Text
  LECTURAS        LECTURAS[]
}

model CERRADAS {
  ID_CERRADA  Int       @id @default(autoincrement())
  ID_PREGUNTA Int
  ID_USUARIO  Int
  CORRECTA    Boolean
  DESCRIPCION String    @db.VarChar(50)
  PREGUNTAS   PREGUNTAS @relation(fields: [ID_PREGUNTA], references: [ID_PREGUNTA], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_14")
  USUARIOS    USUARIOS  @relation(fields: [ID_USUARIO], references: [ID_USUARIO], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_16")

  @@index([ID_PREGUNTA], map: "FK_REFERENCE_14")
  @@index([ID_USUARIO], map: "FK_REFERENCE_16")
}

model HISTORIAL {
  ID_HISTORIAL Int      @id @default(autoincrement())
  ID_USUARIO   Int
  ID_LECTURA   Int
  AVANCE       Int
  TIEMPO_FINAL Int
  FECHA_INICIO DateTime @db.DateTime(0)
  FECHA_FINAL  DateTime @db.DateTime(0)
  USUARIOS     USUARIOS @relation(fields: [ID_USUARIO], references: [ID_USUARIO], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_8")
  LECTURAS     LECTURAS @relation(fields: [ID_LECTURA], references: [ID_LECTURA], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_9")

  @@index([ID_USUARIO], map: "FK_REFERENCE_8")
  @@index([ID_LECTURA], map: "FK_REFERENCE_9")
}

model INSCRITOS {
  ID_INSCRITOS Int      @id @default(autoincrement())
  ID_SALA      Int
  ID_USUARIO   Int
  ACEPTADO     Boolean
  SALAS        SALAS    @relation(fields: [ID_SALA], references: [ID_SALA], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_6")
  USUARIOS     USUARIOS @relation(fields: [ID_USUARIO], references: [ID_USUARIO], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_7")

  @@index([ID_SALA], map: "FK_REFERENCE_6")
  @@index([ID_USUARIO], map: "FK_REFERENCE_7")
}

model LECTURAS {
  ID_LECTURA          Int             @id @default(autoincrement())
  ID_AUTOR            Int
  TITULO              String          @db.VarChar(100)
  FECHA_PUBLICACION   DateTime?       @db.Date
  GENERO              String          @db.VarChar(50)
  TEXTO               String          @db.Text
  CORRIENTE_LITERARIA String          @db.VarChar(100)
  PUNTUACION          Float?          @db.Float
  ASIGNACIONES        ASIGNACIONES[]
  HISTORIAL           HISTORIAL[]
  AUTORES             AUTORES         @relation(fields: [ID_AUTOR], references: [ID_AUTOR], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_3")
  PROGRESOS           PROGRESOS[]
  QUESTIONARIOS       QUESTIONARIOS[]

  @@index([ID_AUTOR], map: "FK_REFERENCE_3")
}

model PREGUNTAS {
  ID_PREGUNTA     Int           @id @default(autoincrement())
  ID_QUESTIONARIO Int
  DESCRIPCION     String        @db.VarChar(255)
  CERRADA         Boolean
  CERRADAS        CERRADAS[]
  QUESTIONARIOS   QUESTIONARIOS @relation(fields: [ID_QUESTIONARIO], references: [ID_QUESTIONARIO], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_15")
  RESPUESTAS      RESPUESTAS[]

  @@index([ID_QUESTIONARIO], map: "FK_REFERENCE_15")
}

model PROGRESOS {
  ID_PROGRESOS Int      @id @default(autoincrement())
  ID_USUARIO   Int
  ID_LECTURA   Int
  TIEMPO       Int
  FECHA        DateTime @db.Date
  USUARIOS     USUARIOS @relation(fields: [ID_USUARIO], references: [ID_USUARIO], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_10")
  LECTURAS     LECTURAS @relation(fields: [ID_LECTURA], references: [ID_LECTURA], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_11")

  @@index([ID_USUARIO], map: "FK_REFERENCE_10")
  @@index([ID_LECTURA], map: "FK_REFERENCE_11")
}

model QUESTIONARIOS {
  ID_QUESTIONARIO Int         @id @default(autoincrement())
  ID_LECTURA      Int
  DESCRIPCION     String?     @db.VarChar(50)
  NIVEL           Int
  PREGUNTAS       PREGUNTAS[]
  LECTURAS        LECTURAS    @relation(fields: [ID_LECTURA], references: [ID_LECTURA], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_12")

  @@index([ID_LECTURA], map: "FK_REFERENCE_12")
}

model RESPUESTAS {
  ID_RESPUESTA    Int       @id @default(autoincrement())
  ID_PREGUNTA     Int
  ID_USUARIO      Int
  TEXTO_RESPUESTA String    @db.VarChar(1024)
  PREGUNTAS       PREGUNTAS @relation(fields: [ID_PREGUNTA], references: [ID_PREGUNTA], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_17")
  USUARIOS        USUARIOS  @relation(fields: [ID_USUARIO], references: [ID_USUARIO], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_18")

  @@index([ID_PREGUNTA], map: "FK_REFERENCE_17")
  @@index([ID_USUARIO], map: "FK_REFERENCE_18")
}

model SALAS {
  ID_SALA        Int            @id @default(autoincrement())
  ID_RESPONSABLE Int
  DESCRIPCION    String         @db.VarChar(50)
  FECHA_CREACION DateTime       @db.Date
  HASH           String         @db.VarChar(255)
  ASIGNACIONES   ASIGNACIONES[]
  INSCRITOS      INSCRITOS[]
  USUARIOS       USUARIOS       @relation(fields: [ID_RESPONSABLE], references: [ID_USUARIO], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_2")

  @@index([ID_RESPONSABLE], map: "FK_REFERENCE_2")
}

model TUTORES {
  ID_TUTOR    Int      @id @default(autoincrement())
  ID_TUTORADO Int
  NOMBRE      String   @db.VarChar(100)
  PARENTESCO  String   @db.VarChar(25)
  EMAIL       String   @db.VarChar(100)
  APELLIDOS   String   @db.VarChar(100)
  USUARIOS    USUARIOS @relation(fields: [ID_TUTORADO], references: [ID_USUARIO], onDelete: NoAction, onUpdate: NoAction, map: "FK_REFERENCE_1")

  @@index([ID_TUTORADO], map: "FK_REFERENCE_1")
}

model USUARIOS {
  ID_USUARIO   Int            @id @default(autoincrement())
  NOMBRE       String         @db.VarChar(100)
  FECHA_NAC    DateTime       @db.Date
  TIPO_USUARIO String         @db.VarChar(25)
  EMAIL        String         @db.VarChar(100)
  PWD          String         @db.VarChar(200)
  FECHA_ALTA   DateTime       @db.DateTime(0)
  APODO        String         @db.VarChar(25)
  FOTO         String?        @db.Text
  NIVEL        String         @db.VarChar(10)
  APELLIDOS    String         @db.VarChar(100)
  STATUS       String         @db.VarChar(25)
  ALARMAS      ALARMAS[]
  CERRADAS     CERRADAS[]
  DISPOSITIVOS DISPOSITIVOS[]
  HISTORIAL    HISTORIAL[]
  INSCRITOS    INSCRITOS[]
  PROGRESOS    PROGRESOS[]
  RESPUESTAS   RESPUESTAS[]
  SALAS        SALAS[]
  TUTORES      TUTORES[]
}

model ALARMAS {
  ID          Int      @id @default(autoincrement())
  DESCRIPCION String?  @db.VarChar(100)
  HORA        DateTime @default(now()) @db.Timestamp(0)
  ID_USUARIO  Int
  USUARIOS    USUARIOS @relation(fields: [ID_USUARIO], references: [ID_USUARIO], onUpdate: Restrict, map: "FK_AlarmasUsuarios")

  @@index([ID_USUARIO], map: "FK_AlarmasUsuarios")
}

model DISPOSITIVOS {
  ID               Int      @id @default(autoincrement())
  ID_USUARIO       Int
  UUID_DISPOSITIVO String   @db.VarChar(200)
  USUARIOS         USUARIOS @relation(fields: [ID_USUARIO], references: [ID_USUARIO], onUpdate: Restrict, map: "FK_DispositivosUsuarios")

  @@index([ID_USUARIO], map: "FK_DispositivosUsuarios")
}
